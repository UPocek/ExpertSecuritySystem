// package com.ftn.sbnz.rules;

// import com.ftn.sbnz.model.models.Event;
// import com.ftn.sbnz.model.models.Camera;
// import com.ftn.sbnz.model.models.Security;
// import com.ftn.sbnz.model.models.Alarm;
// import com.ftn.sbnz.model.models.Room;
// import com.ftn.sbnz.model.models.TemperatureReading;
// import com.ftn.sbnz.model.models.FaceDetection;
// import com.ftn.sbnz.model.models.ContinuousSensor;
// import com.ftn.sbnz.model.events.DiscretSensorEvent;
// import com.ftn.sbnz.model.models.Level;

// rule "Activate camera if motion is detected and camera is present"
// when
//     $event: DiscretSensorEvent(type == "motion")
//     $camera: Camera(roomId == $event.roomId, $camera.isOn == false)
// then
//     $camera.setIsOn(true);
//     delete($event);
// end

// rule "Activate camera if sound or smoke is detected and camera is present"
// when
//     $event: ContinuousSensor(type in ("sound", "smoke"), level == Level.MEDIUM)
//     $camera: Camera(roomId == $event.roomId,, $camera.isOn == false)
// then
//     $camera.setIsOn(true);
//     $event.setProcessed(true);
// end

// rule "Notify security if motion is detected and camera is not present"
// when
//     $event: DiscretSensorEvent(type == "motion", processed == false)
//     $room: Room(id == $event.roomId)
//     not(Camera(roomId == $room.id))
// then
//     Security.notifyOnCaution($room);
//     $event.setProcessed(true);
// end

// rule "Notify security if sound or smoke is detected and camera is not present"
// when
//     $event: ContinuousSensor(type in ("sound", "smoke"))
//     $room: Room(id == $event.roomId)
//     not(Camera(roomId == $room.id))
// then
//     Security.notifyOnCaution($room);
// end

// rule "Always notify security if camera is not present"
// when
//     $room: Room()
//     not(Camera(roomId == $room.id))
// then
//     Security.notifyOnCaution($room);
// end

// rule "Monitor room when camera is on and check for presence"
// when
//     $camera: Camera(status == "on")
//     $room: Room(id == $camera.roomId)
//     $event: Event(type in ("motion", "sound", "smoke"), roomId == $room.id)
// then
//     // Monitor the room
// end

// rule "Check temperature if presence detected by camera"
// when
//     $camera: Camera(status == "on", detected == true)
//     $room: Room(id == $camera.roomId)
// then
//     insert(new DiscretSensorEvent("detectTemp", $room.id););
// end

// rule "Check temperature if presence detected by camera"
// when
//     $event: DiscretSensorEvent(type == "detectTemp", warm == true)
//     $camera: Camera(roomId == $event.roomId)
// then
//     insert(new DiscretSensorEvent("faceRecognition",$event.roomId););
// end

// rule "Signal unknown person if face detection fails"
// when
//     $camera: Camera(status == "on")
//     $room: Room(id == $camera.roomId)
//     $faceDetection: DiscretSensorEvent(type == "faceRecognition", detected == false, roomId == $room.id)
// then
//     $room.setAlarm(Alarm.YELLOW);
// end

// rule "Set red alarm and lock doors if loud sound in room with unknown person and yellow alarm"
// when
//     $event: ContinuousSensor(type == "sound", level == Level.HIGH)
//     $room: Room(id == $event.roomId, alarm == Alarm.YELLOW)
//     $faceDetection: DiscretSensorEvent(type == "faceRecognition", detected == false, roomId == $room.id)
// then
//     $room.setAlarm(Alarm.RED);
//     $room.setLocked(true);
// end

// rule "Call police if alarm is red"
// when
//     $room: Room(alarm == Alarm.RED)
// then
//     Security.callPolice($room);
// end

// rule "Set yellow alarm if security finds unknown person"
// when
//     $security: Security(currentRoomId != null )
//     $room: Room(id == $security.currentRoomId)
//     $faceDetection: DiscretSensorEvent(type == "securityFaceRecognition", detected == false, roomId == $room.id)
// then
//     Security.notifyTeam($room);
//     $room.setAlarm(Alarm.YELLOW);
// end

// rule "Set red alarm and lock doors if loud sound in room with security and yellow alarm"
// when
//     $event: ContinuousSensor(type == "sound", level == Level.HIGH)
//     $room: Room(id == $event.roomId, alarm == Alarm.YELLOW)
//     $security: Security(currentRoomId == $room.id)
// then
//     $room.setAlarm(Alarm.RED);
//     $room.setLocked(true);
// end

// rule "Call police if alarm is red"
// when
//     $room: Room(alarm == Alarm.RED)
// then
//     Security.callPolice($room);
// end
